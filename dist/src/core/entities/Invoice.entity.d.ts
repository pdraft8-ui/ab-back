export class Invoice {
    static fromJSON(data: any): Invoice;
    constructor({ id, invoiceNumber, customer, insurancePolicy, vehicle, invoiceDate, dueDate, status, totalAmount, balanceDue, description, notes, createdBy, updatedBy, createdAt, updatedAt, }: {
        id: any;
        invoiceNumber: any;
        customer: any;
        insurancePolicy: any;
        vehicle: any;
        invoiceDate: any;
        dueDate: any;
        status: any;
        totalAmount: any;
        balanceDue: any;
        description: any;
        notes: any;
        createdBy: any;
        updatedBy: any;
        createdAt: any;
        updatedAt: any;
    });
    id: any;
    invoiceNumber: any;
    customer: any;
    insurancePolicy: any;
    vehicle: any;
    invoiceDate: any;
    dueDate: any;
    status: any;
    totalAmount: any;
    balanceDue: any;
    description: any;
    notes: any;
    createdBy: any;
    updatedBy: any;
    createdAt: any;
    updatedAt: any;
    isOverdue(): boolean;
    isPaid(): boolean;
    isPartiallyPaid(): boolean;
    isPending(): boolean;
    canBeUpdated(): boolean;
    canBeDeleted(): boolean;
    updateStatus(): void;
    updateBalance(newBalance: any): void;
    validateAmount(): boolean;
    validateDueDate(): boolean;
    validateCustomer(): boolean;
    validateInsurancePolicy(): boolean;
    generateInvoiceNumber(invoiceCount: any): string;
    calculateDaysUntilDue(): number;
    calculateDaysOverdue(): number;
    getPaymentPercentage(): number;
    toJSON(): {
        id: any;
        invoiceNumber: any;
        customer: any;
        insurancePolicy: any;
        vehicle: any;
        invoiceDate: any;
        dueDate: any;
        status: any;
        totalAmount: any;
        balanceDue: any;
        description: any;
        notes: any;
        createdBy: any;
        updatedBy: any;
        createdAt: any;
        updatedAt: any;
    };
}
//# sourceMappingURL=Invoice.entity.d.ts.map