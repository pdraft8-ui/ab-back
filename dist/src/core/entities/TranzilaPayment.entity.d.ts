export class TranzilaPayment {
    constructor({ id, paymentId, invoiceId, customerId, amount, currency, description, status, tranzilaTransactionId, tranzilaResponse, customerEmail, customerPhone, returnUrl, cancelUrl, paymentUrl, refundAmount, refundReason, refundedAt, createdBy, updatedBy, completedAt, failedAt, errorMessage, createdAt, updatedAt, }: {
        id: any;
        paymentId: any;
        invoiceId: any;
        customerId: any;
        amount: any;
        currency: any;
        description: any;
        status: any;
        tranzilaTransactionId: any;
        tranzilaResponse: any;
        customerEmail: any;
        customerPhone: any;
        returnUrl: any;
        cancelUrl: any;
        paymentUrl: any;
        refundAmount: any;
        refundReason: any;
        refundedAt: any;
        createdBy: any;
        updatedBy: any;
        completedAt: any;
        failedAt: any;
        errorMessage: any;
        createdAt: any;
        updatedAt: any;
    });
    id: any;
    paymentId: any;
    invoiceId: any;
    customerId: any;
    amount: any;
    currency: any;
    description: any;
    status: any;
    tranzilaTransactionId: any;
    tranzilaResponse: any;
    customerEmail: any;
    customerPhone: any;
    returnUrl: any;
    cancelUrl: any;
    paymentUrl: any;
    refundAmount: any;
    refundReason: any;
    refundedAt: any;
    createdBy: any;
    updatedBy: any;
    completedAt: any;
    failedAt: any;
    errorMessage: any;
    createdAt: any;
    updatedAt: any;
    isPending(): boolean;
    isCompleted(): boolean;
    isFailed(): boolean;
    isRefunded(): boolean;
    isCancelled(): boolean;
    canBeRefunded(): boolean;
    canBeCancelled(): boolean;
    hasPaymentUrl(): boolean;
    hasTranzilaTransactionId(): boolean;
    validateAmount(): boolean;
    validateCurrency(): boolean;
    validateRefundAmount(refundAmount: any): boolean;
    canProcessPayment(): boolean;
    canProcessRefund(refundAmount: any): boolean;
    markAsCompleted(transactionId: any): void;
    markAsFailed(errorMessage: any): void;
    markAsRefunded(refundAmount: any, reason: any): void;
    generatePaymentId(): any;
}
//# sourceMappingURL=TranzilaPayment.entity.d.ts.map