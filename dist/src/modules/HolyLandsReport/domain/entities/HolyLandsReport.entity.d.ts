export class HolyLandsReport {
    static fromJSON(data: any): HolyLandsReport;
    static create(data: any): HolyLandsReport;
    constructor({ id, customerId, insuranceDetails, vehicleDetails, ownerAndDriverDetails, accidentDetails, otherVehicles, involvementDetails, injuries, injuredNamesAndAddresses, passengerNamesAndAddresses, additionalDetails, signature, signatureDate, employeeNotes, employeeSignature, employeeDate, createdAt, updatedAt, }: {
        id?: any;
        customerId: any;
        insuranceDetails?: {};
        vehicleDetails?: {};
        ownerAndDriverDetails?: {};
        accidentDetails?: {};
        otherVehicles?: any[];
        involvementDetails?: {};
        injuries?: any[];
        injuredNamesAndAddresses?: string;
        passengerNamesAndAddresses?: string;
        additionalDetails?: string;
        signature?: string;
        signatureDate?: any;
        employeeNotes?: string;
        employeeSignature?: string;
        employeeDate?: any;
        createdAt?: Date;
        updatedAt?: Date;
    });
    id: any;
    customerId: any;
    insuranceDetails: {};
    vehicleDetails: {};
    ownerAndDriverDetails: {};
    accidentDetails: {};
    otherVehicles: any[];
    involvementDetails: {};
    injuries: any[];
    injuredNamesAndAddresses: string;
    passengerNamesAndAddresses: string;
    additionalDetails: string;
    signature: string;
    signatureDate: any;
    employeeNotes: string;
    employeeSignature: string;
    employeeDate: any;
    createdAt: Date;
    updatedAt: Date;
    isValid(): boolean;
    isValidCustomerId(): boolean;
    isValidInsuranceDetails(): boolean;
    isValidVehicleDetails(): boolean;
    isValidOwnerAndDriverDetails(): boolean;
    isValidAccidentDetails(): boolean;
    isValidOtherVehicles(): boolean;
    isValidInvolvementDetails(): boolean;
    isValidInjuries(): boolean;
    isValidDates(): boolean;
    getId(): any;
    getCustomerId(): any;
    getInsuranceDetails(): {};
    getVehicleDetails(): {};
    getOwnerAndDriverDetails(): {};
    getAccidentDetails(): {};
    getOtherVehicles(): any[];
    getInvolvementDetails(): {};
    getInjuries(): any[];
    getInjuredNamesAndAddresses(): string;
    getPassengerNamesAndAddresses(): string;
    getAdditionalDetails(): string;
    getSignature(): string;
    getSignatureDate(): any;
    getEmployeeNotes(): string;
    getEmployeeSignature(): string;
    getEmployeeDate(): any;
    getCreatedAt(): Date;
    getUpdatedAt(): Date;
    updateAccidentReport(updateData: any): void;
    addOtherVehicle(vehicle: any): void;
    addInjury(injury: any): void;
    setSignature(signature: any, date: any): void;
    setEmployeeSignature(signature: any, date: any): void;
    toJSON(): {
        id: any;
        customerId: any;
        insuranceDetails: {};
        vehicleDetails: {};
        ownerAndDriverDetails: {};
        accidentDetails: {};
        otherVehicles: any[];
        involvementDetails: {};
        injuries: any[];
        injuredNamesAndAddresses: string;
        passengerNamesAndAddresses: string;
        additionalDetails: string;
        signature: string;
        signatureDate: any;
        employeeNotes: string;
        employeeSignature: string;
        employeeDate: any;
        createdAt: Date;
        updatedAt: Date;
    };
}
//# sourceMappingURL=HolyLandsReport.entity.d.ts.map