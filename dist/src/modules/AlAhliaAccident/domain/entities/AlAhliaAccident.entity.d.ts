export class AlAhliaAccident {
    static fromJSON(data: any): AlAhliaAccident;
    static create(data: any): AlAhliaAccident;
    constructor({ id, customerId, reportNumber, accidentDate, accidentTime, policeNumber, agentNumber, policyInfo, customerPerson, driverInfo, vehicleInfo, accidentDetails, thirdPartyVehicles, thirdPartyInjuries, thirdPartyPassengers, externalWitnesses, declaration, createdAt, updatedAt, }: {
        id?: any;
        customerId: any;
        reportNumber: any;
        accidentDate: any;
        accidentTime: any;
        policeNumber: any;
        agentNumber: any;
        policyInfo?: {};
        customerPerson?: {};
        driverInfo?: {};
        vehicleInfo?: {};
        accidentDetails?: {};
        thirdPartyVehicles?: any[];
        thirdPartyInjuries?: any[];
        thirdPartyPassengers?: any[];
        externalWitnesses?: any[];
        declaration?: {};
        createdAt?: Date;
        updatedAt?: Date;
    });
    id: any;
    customerId: any;
    reportNumber: any;
    accidentDate: any;
    accidentTime: any;
    policeNumber: any;
    agentNumber: any;
    policyInfo: {};
    customerPerson: {};
    driverInfo: {};
    vehicleInfo: {};
    accidentDetails: {};
    thirdPartyVehicles: any[];
    thirdPartyInjuries: any[];
    thirdPartyPassengers: any[];
    externalWitnesses: any[];
    declaration: {};
    createdAt: Date;
    updatedAt: Date;
    isValid(): boolean;
    isValidCustomerId(): boolean;
    isValidAccidentDate(): boolean;
    isValidAccidentTime(): boolean;
    isValidPolicyInfo(): boolean;
    isValidCustomerPerson(): boolean;
    isValidDriverInfo(): boolean;
    isValidVehicleInfo(): boolean;
    isValidAccidentDetails(): boolean;
    isValidThirdPartyVehicles(): boolean;
    isValidThirdPartyInjuries(): boolean;
    isValidThirdPartyPassengers(): boolean;
    isValidExternalWitnesses(): boolean;
    isValidDeclaration(): boolean;
    getId(): any;
    getCustomerId(): any;
    getReportNumber(): any;
    getAccidentDate(): any;
    getAccidentTime(): any;
    getPoliceNumber(): any;
    getAgentNumber(): any;
    getPolicyInfo(): {};
    getCustomerPerson(): {};
    getDriverInfo(): {};
    getVehicleInfo(): {};
    getAccidentDetails(): {};
    getThirdPartyVehicles(): any[];
    getThirdPartyInjuries(): any[];
    getThirdPartyPassengers(): any[];
    getExternalWitnesses(): any[];
    getDeclaration(): {};
    getCreatedAt(): Date;
    getUpdatedAt(): Date;
    updateAccidentReport(updateData: any): void;
    addThirdPartyVehicle(vehicle: any): void;
    addThirdPartyInjury(injury: any): void;
    addThirdPartyPassenger(passenger: any): void;
    addExternalWitness(witness: any): void;
    toJSON(): {
        id: any;
        customerId: any;
        reportNumber: any;
        accidentDate: any;
        accidentTime: any;
        policeNumber: any;
        agentNumber: any;
        policyInfo: {};
        customerPerson: {};
        driverInfo: {};
        vehicleInfo: {};
        accidentDetails: {};
        thirdPartyVehicles: any[];
        thirdPartyInjuries: any[];
        thirdPartyPassengers: any[];
        externalWitnesses: any[];
        declaration: {};
        createdAt: Date;
        updatedAt: Date;
    };
}
//# sourceMappingURL=AlAhliaAccident.entity.d.ts.map